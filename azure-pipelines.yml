# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: windows-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $currentBranch = "$(Build.SourceBranch)".Substring("refs/heads".Length + 1)
      Write-Host "Current branch to push on GitHub is $currentBranch"
    #git push https://$(ghtoken)@github.com/alkampfergit/fantastic-log-library.git "origin/$currentBranch`:$currentBranch" --force

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "downloading Code QL analysis for windows"
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest -uri https://github.com/github/codeql-action/releases/latest/download/codeql-runner-win.exe -OutFile $(Build.SourcesDirectory)\src\codeql-runner-win.exe
      Write-Host "Code QL analysis for windows downloaded, now we init it"
      cd $(Build.SourcesDirectory)\src
      pwd 
      & ./codeql-runner-win.exe init --github-url https://github.com --repository alkampfergit/fantastic-log-library --github-auth $(ghtoken) --languages csharp
      
      cat $(Build.SourcesDirectory)\src\codeql-runner\codeql-env.sh | Invoke-Expression
      
      #Perform a standard build of your code
      dotnet restore
      dotnet build
      
      #perform CodeQL analysis
      Write-Host "Analyzing with CodeQL"
      & ./codeql-runner-win.exe analyze --github-url https://github.com --repository alkampfergit/fantastic-log-library --github-auth $(ghtoken) --commit $(Build.SourceVersion) --ref $(Build.SourceBranch)